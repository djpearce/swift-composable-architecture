{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"DebugStrategy"}],"languages":["swift"],"platforms":["macOS"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/composablearchitecture\/debugstrategy"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ActionLabelsDebugStrategy","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CustomDumpDebugStrategy"],"kind":"relationships","title":"Conforming Types","type":"conformingTypes"}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DebugStrategy","interfaceLanguage":"swift"},"topicSections":[{"title":"Instance Methods","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DebugStrategy\/debug(receivedAction:oldState:newState:)"]},{"title":"Type Properties","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DebugStrategy\/actionLabels","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DebugStrategy\/customDump"]}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"DebugStrategy"}],"title":"DebugStrategy","roleHeading":"Protocol","role":"symbol","symbolKind":"protocol","externalID":"s:22ComposableArchitecture13DebugStrategyP","modules":[{"name":"ComposableArchitecture"}],"navigatorTitle":[{"kind":"identifier","text":"DebugStrategy"}]},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerProtocol","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerProtocol\/debug()"]]},"seeAlsoSections":[{"title":"Custom strategies","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerProtocol\/debug(_:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CustomDumpDebugStrategy","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ActionLabelsDebugStrategy"],"generated":true}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/DebugStrategy/debug(receivedAction:oldState:newState:)":{"role":"symbol","title":"debug(receivedAction:oldState:newState:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"debug"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Action"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"State"},{"kind":"text","text":">("},{"kind":"externalParam","text":"receivedAction"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":", "},{"kind":"externalParam","text":"oldState"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":", "},{"kind":"externalParam","text":"newState"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":")"}],"abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DebugStrategy\/debug(receivedAction:oldState:newState:)","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/composablearchitecture\/debugstrategy\/debug(receivedaction:oldstate:newstate:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"role":"collection","title":"ComposableArchitecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ReducerProtocol/debug(_:)":{"role":"symbol","title":"debug(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"debug"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Strategy"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Strategy"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"ReducerBuilder","preciseIdentifier":"s:22ComposableArchitecture14ReducerBuilderO"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":">."},{"kind":"typeIdentifier","text":"_Conditional"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"_DebugReducer"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Strategy"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Enhances a reducer with debug logging of received actions and state mutations for the given"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DebugStrategy"},{"type":"text","text":"."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerProtocol\/debug(_:)","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/reducerprotocol\/debug(_:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ReducerProtocol":{"role":"symbol","title":"ReducerProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ReducerProtocol"}],"abstract":[{"type":"text","text":"A protocol that describes how to evolve the current state of an application to the next state,"},{"type":"text","text":" "},{"type":"text","text":"given an action, and describes what "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect"},{"type":"text","text":"s should be executed later by the store, if any."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ReducerProtocol"}],"url":"\/documentation\/composablearchitecture\/reducerprotocol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"role":"symbol","title":"Effect","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Effect"}],"abstract":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect"},{"type":"text","text":" type encapsulates a unit of work that can be run in the outside world, and can"},{"type":"text","text":" "},{"type":"text","text":"feed actions back to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store"},{"type":"text","text":". It is the perfect place to do side effects, such as network"},{"type":"text","text":" "},{"type":"text","text":"requests, saving\/loading from disk, creating timers, interacting with dependencies, and more."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Effect"}],"url":"\/documentation\/composablearchitecture\/effect"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ActionLabelsDebugStrategy":{"role":"symbol","title":"ActionLabelsDebugStrategy","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ActionLabelsDebugStrategy"}],"abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ActionLabelsDebugStrategy","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ActionLabelsDebugStrategy"}],"url":"\/documentation\/composablearchitecture\/actionlabelsdebugstrategy"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/DebugStrategy/customDump":{"conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" is "},{"type":"codeVoice","code":"CustomDumpDebugStrategy"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"customDump","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"customDump"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CustomDumpDebugStrategy","preciseIdentifier":"s:22ComposableArchitecture23CustomDumpDebugStrategyV"}],"abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DebugStrategy\/customDump","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/debugstrategy\/customdump"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CustomDumpDebugStrategy":{"role":"symbol","title":"CustomDumpDebugStrategy","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CustomDumpDebugStrategy"}],"abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CustomDumpDebugStrategy","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CustomDumpDebugStrategy"}],"url":"\/documentation\/composablearchitecture\/customdumpdebugstrategy"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/DebugStrategy/actionLabels":{"conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" is "},{"type":"codeVoice","code":"ActionLabelsDebugStrategy"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"actionLabels","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"actionLabels"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ActionLabelsDebugStrategy","preciseIdentifier":"s:22ComposableArchitecture25ActionLabelsDebugStrategyV"}],"abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DebugStrategy\/actionLabels","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/debugstrategy\/actionlabels"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/DebugStrategy":{"role":"symbol","title":"DebugStrategy","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"DebugStrategy"}],"abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DebugStrategy","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DebugStrategy"}],"url":"\/documentation\/composablearchitecture\/debugstrategy"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ReducerProtocol/debug()":{"role":"symbol","title":"debug()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"debug"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"_DebugReducer"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"CustomDumpDebugStrategy","preciseIdentifier":"s:22ComposableArchitecture23CustomDumpDebugStrategyV"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Enhances a reducer with debug logging of received actions and state mutations."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ReducerProtocol\/debug()","kind":"symbol","type":"topic","url":"\/documentation\/composablearchitecture\/reducerprotocol\/debug()"}}}